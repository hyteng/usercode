import FWCore.ParameterSet.Config as cms

myRPCSeed = cms.EDProducer('RPCSeedProducer',
        BarrelLayerRange = cms.vuint32(4),
        EndcapLayerRange = cms.vuint32(0),
        isCosmic = cms.bool(False),
        isSpecialLayers = cms.bool(False),
        isMixBarrelwithEndcap = cms.bool(False),
        LayersinBarrel = cms.vuint32(1,1,1,1,0,1),
        LayersinEndcap = cms.vuint32(1,1,1,1,1,1),
        ConstraintedBarrelLayer = cms.vuint32(1,1,0,1,0,0),
        ConstraintedNegativeEndcapLayer = cms.vuint32(1,1,1),
        ConstraintedPositiveEndcapLayer = cms.vuint32(1,1,1),
        RPCRecHitsLabel = cms.InputTag("rpcRecHits"),
        BxRange = cms.uint32(0),
        ClusterSet = cms.vint32(),
        MaxDeltaPhi = cms.double(3.14159265359/6),
        ZError = cms.double(130.0),
        AlgorithmType = cms.uint32(2),
        MagnecticFieldThreshold = cms.double(1.0),
        sampleCount = cms.uint32(20),
        ShareRecHitsNumberThreshold = cms.uint32(1),
        isCheckCandidateOverlap = cms.bool(False),
        isCheckGoodOverlap = cms.bool(False),
        BendingPhiLowerTH = cms.vdouble(0.020, 0.020, 3.14),
        BendingPhiUpperTH = cms.vdouble(0.180, 0.150, 3.14),
        MeanPt_Parameter0 = cms.vdouble(301.6, 256.7, 0, 344.529),
        MeanPt_Parameter1 = cms.vdouble(-86.93, -79.46, 0, -108.671),
        MeanPt_Parameter2 = cms.vdouble(8.506, 8.301, 0, 11.1376),
        SigmaPt_Parameter0 = cms.vdouble(114.1, 110.6, 0, 213.289),
        SigmaPt_Parameter1 = cms.vdouble(-33.35, -33.59, 0, -77.8504),
        SigmaPt_Parameter2 = cms.vdouble(2.632, 2.748, 0, 7.10351),
        SimHitTag = cms.InputTag("g4SimHits", "MuonRPCHits"),
        RPCDigiSimLinkTag = cms.InputTag("simMuonRPCDigis", "RPCDigiSimLink"),
        SeedPurityTH = cms.double(0.5),
        useSimData = cms.bool(False)
)
